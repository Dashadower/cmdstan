##
# Build test executables
##

ifeq ($(OS),Windows_NT)
LIB_DIRS_FULL=$(filter %/, $(wildcard src/test/interface/*/) src/test/interface/)
LIB_DIRS_TBB=$(LIB_DIRS_FULL:src/%/=%/tbb.dll)
else
LIB_DIRS_TBB=
endif

test/%/tbb.dll : $(TBB_TARGETS)
	@mkdir -p test/$*
	cp -v $(TBB_TARGETS) test/$*

.PRECIOUS: $(LIB_DIRS_TBB)

test/%$(EXE) : CXXFLAGS += $(CXXFLAGS_GTEST)
test/%$(EXE) : CPPFLAGS += $(CPPFLAGS_GTEST)
test/%$(EXE) : INC += $(INC_GTEST) -I $(RAPIDJSON)
test/%$(EXE) : test/%.o $(GTEST)/src/gtest_main.cc $(GTEST)/src/gtest-all.o $(LIBSUNDIALS) $(MPI_TARGETS) $(TBB_TARGETS)  $(LIB_DIRS_TBB)
	$(LINK.cpp) $(filter-out src/test/test-models/% src/%.csv bin/% test/%.hpp %.hpp-test test/%/tbb.dll,$^) $(LDLIBS) $(OUTPUT_OPTION)

test/%.o : src/test/%.cpp
	@mkdir -p $(dir $@)
	$(COMPILE.cpp) $< $(OUTPUT_OPTION)

##
# Customization for generating dependencies
##
src/test/*.d : src/test/*.hpp
src/test/%.d : CXXFLAGS += $(CXXFLAGS_GTEST)
src/test/%.d : CPPFLAGS += $(CPPFLAGS_GTEST)
src/test/%.d : INC += $(INC_GTEST)
src/test/%.d : DEPTARGETS = -MT $(patsubst src/test/%.d,test/%.o,$@) -MT $@

ifneq ($(filter test/%,$(MAKECMDGOALS)),)
-include $(patsubst test/%$(EXE),src/test/%.d,$(filter test/%,$(MAKECMDGOALS)))
-include $(patsubst %.cpp,%.d,$(STANC_TEMPLATE_INSTANTIATION_CPP))
endif

TEST_MODELS_EXE := $(patsubst %.stan,%$(EXE),$(wildcard src/test/test-models/*.stan))

.PHONY: test-models-exe
test-models-exe: $(TEST_MODELS_EXE)

############################################################
#
# Target to verify header files within CmdStan has
# enough include calls
##
HEADER_TESTS := $(addsuffix -test,$(shell find src/cmdstan -name '*.hpp' -type f))

ifeq ($(OS),Windows_NT)
  DEV_NULL = nul
else
  DEV_NULL = /dev/null
endif

%.hpp-test : %.hpp test/dummy.cpp
	$(COMPILE.cpp) -O0 -include $^ -o $(DEV_NULL)

test/dummy.cpp:
	@mkdir -p test
	@touch $@
	@echo "int main() {return 0;}" >> $@

.PHONY: test-headers
test-headers: $(HEADER_TESTS)
