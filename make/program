##
# Models (to be passed through stanc)
##

CMDSTAN_MAIN ?= src/cmdstan/main.cpp
CMDSTAN_MAIN_O=$(CMDSTAN_MAIN:.cpp=.o)

STAN_TARGETS = $(patsubst %.stan,%$(EXE),$(wildcard $(patsubst %$(EXE),%.stan,$(MAKECMDGOALS))))

##
# Precompiled header
##
$(STAN)src/stan/model/model_header.d : DEPTARGETS = -MT $(patsubst %.d,%.hpp.gch,$@) -MT $@
$(STAN)src/stan/model/model_header.hpp.gch : $(STAN)src/stan/model/model_header.hpp
	@echo ''
	@echo '--- Compiling pre-compiled header ---	'
	$(COMPILE.cpp) $< $(OUTPUT_OPTION)

ifeq ($(CXX_TYPE),clang)
CXXFLAGS_PROGRAM += -include-pch $(STAN)src/stan/model/model_header.hpp.gch
$(STAN_TARGETS) examples/bernoulli/bernoulli$(EXE) $(patsubst %.stan,%$(EXE),$(wildcard src/test/test-models/*.stan)) : %$(EXE) : $(STAN)src/stan/model/model_header.hpp.gch
endif

ifneq ($(findstring allow_undefined,$(STANCFLAGS)),)
$(STAN_TARGETS) examples/bernoulli/bernoulli$(EXE) $(patsubst %.stan,%$(EXE),$(wildcard src/test/test-models/*.stan)) : CXXFLAGS_PROGRAM += -include $(USER_HEADER)
endif


%.hpp : %.stan bin/stanc$(EXE)
	@echo ''
	@echo '--- Translating Stan model to C++ code ---'
	$(WINE) bin/stanc$(EXE) $(STANCFLAGS) --o=$@ $<

%.o : %.cpp
	$(COMPILE.cpp) $< -o $@

%.cpp : src/cmdstan/stan_model_inst.cpp %.hpp
	echo '#include "$(notdir $*).hpp"' > $@
	cat $< >> $@

.PRECIOUS: %.hpp
%$(EXE) : %.cpp $(CMDSTAN_MAIN_O) $(LIBSUNDIALS) $(MPI_TARGETS)
	@echo ''
	@echo '--- Linking C++ model ---'
	$(COMPILE.cpp) $(CXXFLAGS_PROGRAM) -c $< -o $@.o
	$(LINK.cpp) -o $@ $@.o $(CMDSTAN_MAIN_O) $(LDLIBS) $(LIBSUNDIALS) $(MPI_TARGETS)


##
# Dependencies file
##
ifneq (,$(STAN_TARGETS))
$(patsubst %$(EXE),%.d,$(STAN_TARGETS)) : DEPTARGETS += -MT $(patsubst %.d,%$(EXE),$@) -include $< -include $(CMDSTAN_MAIN)
-include $(patsubst %$(EXE),%.d,$(STAN_TARGETS))
-include src/cmdstan/stanc.d
-include $(patsubst %.cpp,%.d,$(STANC_TEMPLATE_INSTANTIATION_CPP))
ifeq ($(CXX_TYPE),clang)
-include $(STAN)src/stan/model/model_header.d
endif
endif
